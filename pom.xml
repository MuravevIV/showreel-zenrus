<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ilyamur</groupId>
    <artifactId>showreel-zenrus</artifactId>
    <version>1.0</version>
    <name>showreel-zenrus</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <encoding>UTF-8</encoding>
        <scala.version>2.10.3</scala.version>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
        <maven.compiler.fork>true</maven.compiler.fork>
    </properties>

    <profiles>

        <profile>
            <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
            <!-- Use this profile for any OpenShift specific customization your app will need. -->
            <!-- By default that is to put the resulting archive into the 'deployments' folder. -->
            <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
            <id>openshift</id>
            <properties>
                <server.ip>${env.OPENSHIFT_DIY_IP}</server.ip>
                <server.port>${env.OPENSHIFT_DIY_PORT}</server.port>
                <admin.port>9990</admin.port>
                <websocket.port>8000</websocket.port>
                <log.dir>${env.OPENSHIFT_LOG_DIR}</log.dir>
            </properties>
        </profile>

        <profile>
            <id>local</id>
            <properties>
                <server.ip>127.0.0.1</server.ip>
                <server.port>8080</server.port>
                <admin.port>9990</admin.port>
                <websocket.port>8000</websocket.port>
                <log.dir>${project.basedir}/logs</log.dir>
            </properties>
        </profile>

    </profiles>

    <repositories>

        <repository>
            <id>com.github.sprsquish</id>
            <url>https://raw.github.com/sprsquish/mvn-repo/master/</url>
            <layout>default</layout>
        </repository>

    </repositories>

    <dependencies>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <dependency>
            <groupId>com.twitter</groupId>
            <artifactId>finatra_2.10</artifactId>
            <version>1.5.2</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.5</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.0.6</version>
        </dependency>

        <dependency>
            <groupId>com.softwaremill.macwire</groupId>
            <artifactId>core_2.10</artifactId>
            <version>0.4.1</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.2.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.1.3</version>
        </dependency>

        <dependency>
            <groupId>io.reactivex</groupId>
            <artifactId>rxscala_2.10</artifactId>
            <version>0.24.1</version>
        </dependency>

        <dependency>
            <groupId>com.github.sprsquish</groupId>
            <artifactId>finagle-websockets_2.10</artifactId>
            <version>6.8.1</version>
        </dependency>

        <dependency>
            <groupId>com.twitter</groupId>
            <artifactId>finagle-core_2.10</artifactId>
            <version>6.11.1</version>
        </dependency>

    </dependencies>

    <build>

        <finalName>${project.name}</finalName>

        <sourceDirectory>src/main/scala</sourceDirectory>
        <testSourceDirectory>src/test/scala</testSourceDirectory>

        <plugins>

            <!-- compile scala sources/tests -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <args>
                        <arg>-unchecked</arg>
                        <arg>-deprecation</arg>
                        <arg>-explaintypes</arg>
                    </args>
                    <launchers>
                        <launcher>
                            <id>main</id>
                            <mainClass>com.ilyamur.showreel.zenrus.Server</mainClass>
                        </launcher>
                    </launchers>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <args>
                                <arg>-make:transitive</arg>
                                <arg>-dependencyfile</arg>
                                <arg>${project.build.directory}/.scala_dependencies</arg>
                            </args>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- invoke scalatest tests -->
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>1.0-M2</version>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- copy resources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- disable jar packaging -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3.1</version>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>

            <!-- start server -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.3.2</version>
                <configuration>
                    <mainClass>com.ilyamur.showreel.zenrus.Server</mainClass>
                    <systemProperties>
                        <systemProperty>
                            <key>com.twitter.finatra.config.port</key>
                            <value>${server.ip}:${server.port}</value>
                        </systemProperty>
                        <systemProperty>
                            <key>com.twitter.finatra.config.adminPort</key>
                            <value>${server.ip}:${admin.port}</value>
                        </systemProperty>
                        <systemProperty>
                            <key>com.twitter.finatra.config.logPath</key>
                            <value></value>
                        </systemProperty>
                        <systemProperty>
                            <key>com.twitter.finatra.config.websocketPort</key>
                            <value>${server.ip}:${websocket.port}</value>
                        </systemProperty>
                        <systemProperty>
                            <key>log.dir</key>
                            <value>${log.dir}</value>
                        </systemProperty>
                    </systemProperties>
                </configuration>
            </plugin>

        </plugins>

    </build>

</project>
